// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrganizationBankingSystem.MVVM.Model;

#nullable disable

namespace OrganizationBankingSystem.Migrations
{
    [DbContext(typeof(BankSystemContext))]
    [Migration("20221121203837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BankUserId")
                        .HasColumnType("int");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("char(15)");

                    b.Property<DateTime>("OpenTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankUserId");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankAccountStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("money");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("BankAccountStatus");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("CvcCode")
                        .IsRequired()
                        .HasColumnType("nchar(68)");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OpenTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TariffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("TariffId")
                        .IsUnique();

                    b.ToTable("BankCard");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nchar(68)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BankUsers");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Credit", b =>
                {
                    b.Property<int>("CreditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("smallmoney");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Closed")
                        .HasColumnType("int");

                    b.HasKey("CreditId");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Credit");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.FavoriteCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankUserId")
                        .HasColumnType("int");

                    b.Property<string>("FromCurrencyCode")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("ToCurrencyCode")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.HasKey("Id");

                    b.HasIndex("BankUserId");

                    b.ToTable("FavoriteCourse");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Tariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TariffTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TariffTypeId");

                    b.ToTable("Tariff");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.TariffType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MonthPeriod")
                        .HasColumnType("int");

                    b.Property<string>("TariffName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<decimal>("TariffPrice")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.ToTable("TariffType");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.TransferReceiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("TransferId")
                        .IsUnique();

                    b.ToTable("TransferReceiver");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.TransferSender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("TransferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("TransferId")
                        .IsUnique();

                    b.ToTable("TransferSender");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankAccount", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankUser", "BankUser")
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankUser");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankAccountStatus", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankAccount", "BankAccount")
                        .WithMany("BankAccountStatuses")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankCard", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankAccount", "BankAccount")
                        .WithMany("BankCards")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizationBankingSystem.MVVM.Model.Tariff", "Tariff")
                        .WithOne("BankCard")
                        .HasForeignKey("OrganizationBankingSystem.MVVM.Model.BankCard", "TariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankUser", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.User", "User")
                        .WithOne("BankUser")
                        .HasForeignKey("OrganizationBankingSystem.MVVM.Model.BankUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Credit", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankAccount", "BankAccount")
                        .WithMany("Credits")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.FavoriteCourse", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankUser", "BankUser")
                        .WithMany("FavoriteCourses")
                        .HasForeignKey("BankUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankUser");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Tariff", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.TariffType", "TariffType")
                        .WithMany("Tariffs")
                        .HasForeignKey("TariffTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TariffType");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.TransferReceiver", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankAccount", "BankAccount")
                        .WithMany("TransferReceivers")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizationBankingSystem.MVVM.Model.Transfer", "Transfer")
                        .WithOne("TransferReceiver")
                        .HasForeignKey("OrganizationBankingSystem.MVVM.Model.TransferReceiver", "TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.TransferSender", b =>
                {
                    b.HasOne("OrganizationBankingSystem.MVVM.Model.BankAccount", "BankAccount")
                        .WithMany("TransferSenders")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizationBankingSystem.MVVM.Model.Transfer", "Transfer")
                        .WithOne("TransferSender")
                        .HasForeignKey("OrganizationBankingSystem.MVVM.Model.TransferSender", "TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankAccount", b =>
                {
                    b.Navigation("BankAccountStatuses");

                    b.Navigation("BankCards");

                    b.Navigation("Credits");

                    b.Navigation("TransferReceivers");

                    b.Navigation("TransferSenders");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.BankUser", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("FavoriteCourses");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Tariff", b =>
                {
                    b.Navigation("BankCard");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.TariffType", b =>
                {
                    b.Navigation("Tariffs");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.Transfer", b =>
                {
                    b.Navigation("TransferReceiver");

                    b.Navigation("TransferSender");
                });

            modelBuilder.Entity("OrganizationBankingSystem.MVVM.Model.User", b =>
                {
                    b.Navigation("BankUser");
                });
#pragma warning restore 612, 618
        }
    }
}
